openapi: 3.0.0
info:
  title: Semi Systems API
  description: API for Semi Systems
  version: 1.0.0
servers:
  - url: http://localhost/
paths:
  /user/login:
    post:
      summary: User Login
      description: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '400':
          description: Invalid input

  /user/refresh-token:
    post:
      summary: Refresh Token
      description: Refresh authentication token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRefreshToken'
      responses:
        '200':
          description: Successful token refresh
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '400':
          description: Invalid input

  /user/me:
    get:
      summary: Get Current User
      description: Returns data of the current user
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /articles:
    get:
      summary: Get All Articles
      description: Returns all articles
      responses:
        '200':
          description: An array of articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
    post:
      summary: Create Article
      description: Create a new article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleCreate'
      responses:
        '200':
          description: Article created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'

  /articles/{id}:
    put:
      summary: Update Article
      description: Update an existing article
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleUpdate'
      responses:
        '200':
          description: Article updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
    delete:
      summary: Delete Article
      description: Delete an existing article
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Article deleted successfully
        '400':
          description: Invalid ID format
        '404':
          description: Article not found

components:
  schemas:
    UserLogin:
      type: object
      required:
        - session
        - name
        - password
      properties:
        session:
          type: boolean
        name:
          type: string
        password:
          type: string
    UserRefreshToken:
      type: object
      required:
        - session
        - refresh_token
      properties:
        session:
          type: boolean
        refresh_token:
          type: string
    UserLoginResponse:
      type: object
      properties:
        token:
          type: string
        refresh_token:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Article:
      type: object
      properties:
        id:
          type: integer
        author_id:
          type: integer
        author:
          type: string
        title:
          type: string
        text:
          type: string
    ArticleCreate:
      type: object
      required:
        - author_id
        - title
        - text
      properties:
        author_id:
          type: integer
        title:
          type: string
        text:
          type: string
    ArticleUpdate:
      type: object
      required:
        - id
        - title
        - text
      properties:
        id:
          type: integer
        title:
          type: string
        text:
          type: string
